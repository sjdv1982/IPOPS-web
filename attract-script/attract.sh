#!/bin/bash -i

###Converted from AttractEasyModel by easy2model 1.3
### Generated by ATTRACT shell script generator version 0.8

set -u -e
if [ ! -f $ATTRACTDIR/attract ]; then
  echo 'Cannot find the ATTRACT binary in $ATTRACTDIR='\"$ATTRACTDIR\"
  echo 'Please install ATTRACT following the installation instructions'
  echo 'ATTRACT is available at: http://www.attract.ph.tum.de/services/ATTRACT/attract.tgz'
  exit 1
fi
if [ ! -f $ATTRACTDIR/../version ] ||  [ `awk '{print ($1 < 0.4)}' $ATTRACTDIR/../version` -eq 1 ]; then
  echo 'Your ATTRACT version is too old to run this protocol. Please download and install the latest version of ATTRACT'
  echo 'ATTRACT is available at: http://www.attract.ph.tum.de/services/ATTRACT/attract.tgz'
  exit 1
fi
trap "kill -- -$BASHPID; attractclean" ERR EXIT
$ATTRACTDIR/shm-clean

rm -rf result.dat result.pdb result.lrmsd result.irmsd result.fnat result.interface >& /dev/null
function attractclean {
  $ATTRACTDIR/shm-clean
  rm -f receptorgrid.grid
}

#name of the run
name=attract_2021_07_21

#docking parameters
params="$ATTRACTDIR/../attract.par receptorr.pdb ligandr.pdb --fix-receptor"
scoreparams="$ATTRACTDIR/../attract.par receptorr.pdb ligandr.pdb --score --fix-receptor"
gpuparams0="-d 0 -p $ATTRACTDIR/../attract.par -r receptorr.pdb"
#gpuparams0="-c 8 -p $ATTRACTDIR/../attract.par -r receptorr.pdb"
gpuparams="$gpuparams0 -l ligandr.pdb"

#grid parameters
gridparams=" --grid 1 receptorgrid.gridheader"
gpugridparams=" -g receptorgrid.grid"

#parallelization parameters
parals="--np 8 --chunks 8"

#see if pypy is installed
PYPY=python2
command -v pypy >/dev/null 2>&1 && PYPY=pypy

if [ 1 -eq 1 ]; then ### move and change to disable parts of the protocol

echo '**************************************************************'
echo 'Reduce partner PDBs...'
echo '**************************************************************'
python2 $ATTRACTDIR/../allatom/aareduce.py receptor.pdb receptor-aa.pdb --chain A --dumppatch --pdb2pqr > receptor.mapping
python2 $ATTRACTTOOLS/reduce.py receptor-aa.pdb receptorr.pdb --chain A > /dev/null
python2 $ATTRACTDIR/../allatom/aareduce.py ligand.pdb ligand-aa.pdb --chain B --dumppatch --pdb2pqr > ligand.mapping
python2 $ATTRACTTOOLS/reduce.py ligand-aa.pdb ligandr.pdb --chain B > /dev/null

echo '**************************************************************'
echo 'Generate starting structures...'
echo '**************************************************************'
cat $ATTRACTDIR/../rotation.dat > rotation.dat
$ATTRACTDIR/translate receptorr.pdb ligandr.pdb > translate.dat
$ATTRACTDIR/systsearch > systsearch.dat
start=systsearch.dat

echo '**************************************************************'
echo 'calculate receptorgrid grid'
echo '**************************************************************'
awk '{print substr($0,58,2)}' ligandr.pdb | sort -nu > receptorgrid.alphabet
$ATTRACTDIR/make-grid-omp receptorr.pdb $ATTRACTDIR/../attract.par 5.0 7.0 receptorgrid.grid  --alphabet receptorgrid.alphabet
$ATTRACTDIR/shm-grid receptorgrid.grid receptorgrid.gridheader

echo '**************************************************************'
echo 'Docking'
echo '**************************************************************'

echo '**************************************************************'
echo '1st minimization'
echo '**************************************************************'
$ATTRACTDIR/emATTRACT --dof $start $gpuparams $gpugridparams -a receptorgrid.alphabet > out_$name.dat

echo '**************************************************************'
echo 'Final rescoring'
echo '**************************************************************'
python2 $ATTRACTDIR/../protocols/attract.py out_$name.dat $scoreparams --rcut 50.0 $parals --output out_$name.score

echo '**************************************************************'
echo 'Merge the scores with the structures'
echo '**************************************************************'
$PYPY $ATTRACTTOOLS/fill-energies.py out_$name.dat out_$name.score > out_$name-scored.dat

echo '**************************************************************'
echo 'Sort structures'
echo '**************************************************************'
$PYPY $ATTRACTTOOLS/sort.py out_$name-scored.dat > out_$name-sorted.dat

echo '**************************************************************'
echo 'Remove redundant structures'
echo '**************************************************************'
$ATTRACTDIR/deredundant out_$name-sorted.dat 2 | $PYPY $ATTRACTTOOLS/fill-deredundant.py /dev/stdin out_$name-sorted.dat > out_$name-sorted-dr.dat

echo '**************************************************************'
echo 'Soft-link the final results'
echo '**************************************************************'
ln -s out_$name-sorted-dr.dat result.dat

echo '**************************************************************'
echo 'collect top 50 structures:'
echo '**************************************************************'
$ATTRACTTOOLS/top out_$name-sorted-dr.dat 50 > out_$name-top50.dat
$ATTRACTDIR/collect out_$name-top50.dat receptor-aa.pdb ligand-aa.pdb > out_$name-top50.pdb
ln -s out_$name-top50.pdb result.pdb

attractclean

fi ### move to disable parts of the protocol
